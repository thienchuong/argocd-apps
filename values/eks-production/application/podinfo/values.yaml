project-application:
  serviceName: podinfo
  replicaCount: 1
  logLevel: info
  backend: #http://backend-podinfo:9898/echo
  backends: []

  image:
    repository: ghcr.io/stefanprodan/podinfo
    tag: 6.5.1
    pullPolicy: IfNotPresent

  ui:
    color: "#34577c"
    message: ""
    logo: ""

  # failure conditions
  faults:
    delay: false
    error: false
    unhealthy: false
    unready: false
    testFail: false
    testTimeout: false

  # Kubernetes Service settings
  service:
    enabled: true
    annotations: {}
    type: ClusterIP
    metricsPort: 9797
    httpPort: 9898
    externalPort: 9898
    grpcPort: 9999
    grpcService: podinfo
    nodePort: 31198

  # enable h2c protocol (non-TLS version of HTTP/2)
  h2c:
    enabled: false

  # enable tls on the podinfo service
  tls:
    enabled: false
    # the name of the secret used to mount the certificate key pair
    secretName:
    # the path where the certificate key pair will be mounted
    certPath: /data/cert
    # the port used to host the tls endpoint on the service
    port: 9899
    # the port used to bind the tls port to the host
    # NOTE: requires privileged container with NET_BIND_SERVICE capability -- this is useful for testing
    # in local clusters such as kind without port forwarding
    hostPort:

  # create a certificate manager certificate (cert-manager required)
  certificate:
    create: false
    # the issuer used to issue the certificate
    issuerRef:
      kind: ClusterIssuer
      name: self-signed
    # the hostname / subject alternative names for the certificate
    dnsNames:
      - podinfo

  # metrics-server add-on required
  hpa:
    enabled: true
    maxReplicas: 5
    # average total CPU usage per pod (1-100)
    cpu: 99
    # average memory usage per pod (100Mi-1Gi)
    memory:
    # average http requests per second per pod (k8s-prometheus-adapter)
    requests:

  # Redis address in the format tcp://<host>:<port>
  cache: ""
  # Redis deployment
  redis:
    enabled: true
    repository: redis
    tag: 7.0.7

  serviceAccount:
    # Specifies whether a service account should be created
    enabled: false
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # List of image pull secrets if pulling from private registries
    imagePullSecrets: []

  # set container security context
  securityContext: {}


  # create Prometheus Operator monitor
  serviceMonitor:
    enabled: false
    interval: 15s
    additionalLabels: {}

  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 64Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  podAnnotations: {}

  # https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  probes:
    readiness:
      initialDelaySeconds: 1
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
    liveness:
      initialDelaySeconds: 1
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
    startup:
      enable: false
      initialDelaySeconds: 10
      timeoutSeconds: 5
      failureThreshold: 20
      successThreshold: 1
      periodSeconds: 10
  configmap:
    enable: true
    data:
      DATABASE_NAME: 'db-name'
      DATABASE_HOST: 'db-url'
      DATABASE_PORT: '5432'
      DATABASE_USERNAME: 'db-user'
      YOUR_ENV_VAR: 'your-env-var'
  ingress:
    enable: true
    name: podinfo
    serviceName: podinfo
    servicePort: 9898
    className: alb
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
    tls:
      - secretName: secret
        hosts:
          - podinfo.io
    host: podinfo.io
    paths:
      - path: /
        pathType: ImplementationSpecific
