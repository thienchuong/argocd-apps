aws-load-balancer-controller: 
  replicaCount: 2
  image:
    repository: public.ecr.aws/eks/aws-load-balancer-controller
    tag: v2.6.1
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    annotations: {}
    name:
    automountServiceAccountToken: true
    imagePullSecrets:
  rbac:
    create: true
  podSecurityContext:
    fsGroup: 65534
  securityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  terminationGracePeriodSeconds: 10
  resources: {}
  priorityClassName: system-cluster-critical
  nodeSelector: {}
  tolerations: []
  affinity: {}
  configureDefaultAffinity: true
  topologySpreadConstraints: {}
  updateStrategy: {}
  serviceAnnotations: {}
  deploymentAnnotations: {}
  podAnnotations: {}
  podLabels: {}
  additionalLabels: {}
  enableCertManager: false
  clusterName:
  cluster:
      dnsDomain: cluster.local
  ingressClass: alb
  ingressClassParams:
    create: true
    name:
    spec: {}
  createIngressClassResource: true
  region:
  vpcId:
  awsApiEndpoints:
  awsApiThrottle:
  awsMaxRetries:
  defaultTargetType: instance
  enablePodReadinessGateInject:
  enableShield:
  enableWaf:
  enableWafv2:
  ingressMaxConcurrentReconciles:
  logLevel:
  metricsBindAddr: ""
  webhookBindPort:
  webhookTLS:
    caCert:
    cert:
    key:
  webhookNamespaceSelectors:
  keepTLSSecret: true
  serviceMaxConcurrentReconciles:
  targetgroupbindingMaxConcurrentReconciles:
  targetgroupbindingMaxExponentialBackoffDelay:
  syncPeriod:
  watchNamespace:
  disableIngressClassAnnotation:
  disableIngressGroupNameAnnotation:
  defaultSSLPolicy:
  livenessProbe:
    failureThreshold: 2
    httpGet:
      path: /healthz
      port: 61779
      scheme: HTTP
    initialDelaySeconds: 30
    timeoutSeconds: 10
  env:
  hostNetwork: false
  dnsPolicy:
  extraVolumeMounts:
  extraVolumes:
  defaultTags: {}
  podDisruptionBudget: {}
  externalManagedTags: []
  enableEndpointSlices:
  enableBackendSecurityGroup:
  backendSecurityGroup:
  disableRestrictedSecurityGroupRules:
  controllerConfig:
    featureGates: {}
  objectSelector:
    matchExpressions:
    matchLabels:
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    interval: 1m
    namespace:
  clusterSecretsPermissions:
    allowAllSecrets: false
  ingressClassConfig:
    default: false
  enableServiceMutatorWebhook: true
