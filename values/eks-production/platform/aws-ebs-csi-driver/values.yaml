aws-ebs-csi-driver:
  image:
    repository: public.ecr.aws/ebs-csi-driver/aws-ebs-csi-driver
    tag: ""
    pullPolicy: IfNotPresent
  customLabels:
    {}
  sidecars:
    provisioner:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-provisioner
        tag: "v3.5.0-eks-1-28-4"
      logLevel: 2
      additionalArgs: []
      additionalClusterRoleRules:
      resources: {}
      leaderElection:
        enabled: true
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    attacher:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-attacher
        tag: "v4.3.0-eks-1-28-4"
      leaderElection:
        enabled: true
      logLevel: 2
      additionalArgs: []
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    snapshotter:
      forceEnable: false
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-snapshotter/csi-snapshotter
        tag: "v6.2.2-eks-1-28-4"
      logLevel: 2
      additionalArgs: []
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    livenessProbe:
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/livenessprobe
        tag: "v2.10.0-eks-1-28-4"
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    resizer:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/external-resizer
        tag: "v1.8.0-eks-1-28-4"
      leaderElection:
        enabled: true
      logLevel: 2
      additionalArgs: []
      additionalClusterRoleRules: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    nodeDriverRegistrar:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/eks-distro/kubernetes-csi/node-driver-registrar
        tag: "v2.8.0-eks-1-28-4"
      logLevel: 2
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
    volumemodifier:
      env: []
      image:
        pullPolicy: IfNotPresent
        repository: public.ecr.aws/ebs-csi-driver/volume-modifier-for-k8s
        tag: "v0.1.3"
      leaderElection:
        enabled: true
      logLevel: 2
      additionalArgs: []
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
  proxy:
    http_proxy:
    no_proxy:
  imagePullSecrets: []
  nameOverride:
  fullnameOverride:
  awsAccessSecret:
    name: aws-secret
    keyId: key_id
    accessKey: access_key
  controller:
    volumeModificationFeature:
      enabled: false
    additionalArgs: []
    sdkDebugLog: false
    loggingFormat: text
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ebs-csi-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    defaultFsType: ext4
    env: []
    envFrom: []
    extraCreateMetadata: true
    extraVolumeTags: {}
    httpEndpoint:
    enableMetrics: false
    serviceMonitor:
      forceEnable: false
      labels:
        release: prometheus
    k8sTagClusterId:
    logLevel: 2
    userAgentExtra: "helm"
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    priorityClassName: system-cluster-critical
    region:
    replicaCount: 2
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        memory: 256Mi
    serviceAccount:
      create: true
      name: ebs-csi-controller-sa
      annotations: {}
      automountServiceAccountToken: true
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
        tolerationSeconds: 300
    topologySpreadConstraints: []
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
    volumes: []
    volumeMounts: []
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    initContainers: []
    otelTracing: {}
  node:
    env: []
    envFrom: []
    kubeletPath: /var/lib/kubelet
    loggingFormat: text
    logLevel: 2
    priorityClassName:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
    nodeSelector: {}
    podAnnotations: {}
    podLabels: {}
    tolerateAllTaints: true
    tolerations:
    - operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        memory: 256Mi
    serviceAccount:
      create: true
      name: ebs-csi-node-sa
      annotations: {}
      automountServiceAccountToken: true
    enableLinux: true
    enableWindows: false
    volumeAttachLimit:
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: "10%"
    hostNetwork: false
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
    volumes: []
    volumeMounts: []
    containerSecurityContext:
      readOnlyRootFilesystem: true
      privileged: true
    otelTracing: {}
  additionalDaemonSets:
  storageClasses: []
  volumeSnapshotClasses: []
  useOldCSIDriver: false
